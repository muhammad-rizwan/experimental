networks:
    development_local:
        driver: bridge

services:
    # php74:
    #     container_name: php74
    #     restart: unless-stopped
    #     build:
    #         context: ./php74
    #         dockerfile: Dockerfile
    #     volumes:
    #         - ./source_code:/var/www/local-dev    
    #     tty: true
    #     environment:
    #         PHP_IDE_CONFIG: "serverName=local-dev.com"
    #     networks:
    #         - development_local

    php83:
        container_name: php83
        restart: unless-stopped
        build:
            context: ./php83
            dockerfile: Dockerfile
        volumes:
            - ./source_code/backend/users_service/public:/var/www/local-dev 
        tty: true
        environment:
            PHP_IDE_CONFIG: "serverName=local-dev.com"
        networks:
            - development_local

    
    frontend_vue:
        container_name: frontend_vue
        build:
            context: ./frontend/vue_js
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        volumes:
            - ./source_code/frontend/vue_js:/app
            - /app/node_modules
        networks:
            - development_local

    
    nginx:
        container_name: nginx
        restart: unless-stopped
        tty: true
        image: nginx:latest
        volumes:
            # nginx config files
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf 
            - ./nginx/local-dev.conf:/etc/nginx/templates/local-dev.conf.template
            - ./source_code:/var/www/local-dev

        ports:
            - "80:80"
            - "443:443"
        environment:
            - LOCAL_SERVER_NAME=local-dev.com
        networks:
            development_local:
                aliases:
                    - local-dev.com

    

    database_mariadb:
        container_name: database_mariadb
        restart: unless-stopped
        build:
            context: ./database_mariadb
            dockerfile: Dockerfile
        tty: true
        ports:
            - "3306:3306"
        volumes:
            - ./containers_data/db_data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: "root"
            DATABASES: >
                test_db:sample.sql.xz
        networks:
            - development_local
                    

    kong-database:
        image: postgres:13
        environment:
            POSTGRES_USER: kong
            POSTGRES_DB: kong
            POSTGRES_PASSWORD: kong
        networks:
            - development_local
        volumes:
            - ./containers_data/kong_data:/var/lib/postgresql/data

    kong:
        image: kong:latest
        container_name: kong
        restart: unless-stopped
        environment:
            KONG_DATABASE: postgres
            KONG_PG_HOST: kong-database
            KONG_PG_PASSWORD: kong
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: "0.0.0.0:8001"
        depends_on:
            - kong-database
        ports:
            - "8000:8000" # Public access to the Kong API Gateway
            - "8443:8443" # Public access to the Kong API Gateway over HTTPS
            - "8001:8001" # Admin API
            - "8444:8444" # Admin API over HTTPS
        networks:
            - development_local
